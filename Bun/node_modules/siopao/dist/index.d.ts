import * as bun from 'bun';
import { Serve } from 'bun';
import { RadixRouter } from 'radix3';

declare type Params = {
    params: Record<string, string>;
};
declare type ServeOptions = Omit<Serve, 'fetch'>;
declare type Handler = (request: Request & Params) => Response;
declare type HTTPMethod = 'GET' | 'PATCH' | 'POST' | 'PUT' | 'DELETE';

declare class Siopao {
    router: RadixRouter;
    constructor();
    fetch(request: Request): Response;
    use(path: string, handler: Handler, method?: HTTPMethod): void;
    get(path: string, handler: Handler): void;
    post(path: string, handler: Handler): void;
    put(path: string, handler: Handler): void;
    patch(path: string, handler: Handler): void;
    delete(path: string, handler: Handler): void;
    serve(options?: ServeOptions, cb?: () => void): bun.Server;
}

export { Siopao, Siopao as default };
