// src/index.ts
import { createRouter } from "radix3";
var Siopao = class {
  router;
  constructor() {
    this.router = createRouter();
  }
  fetch(request) {
    const { pathname } = new URL(request.url);
    const matched = this.router.lookup(pathname);
    if (!matched) {
      return new Response("Not Found", {
        status: 404
      });
    }
    const methodMatched = matched.method === request.method || matched.method === "ALL";
    if (!methodMatched) {
      return new Response("Method Not Allowed", {
        status: 405
      });
    }
    request.params = matched.params || {};
    return matched.handler(request);
  }
  use(path, handler, method) {
    this.router.insert(path, {
      handler,
      method: method || "ALL"
    });
  }
  get(path, handler) {
    this.use(path, handler, "GET");
  }
  post(path, handler) {
    this.use(path, handler, "POST");
  }
  put(path, handler) {
    this.use(path, handler, "PUT");
  }
  patch(path, handler) {
    this.use(path, handler, "PATCH");
  }
  delete(path, handler) {
    this.use(path, handler, "DELETE");
  }
  serve(options = {}, cb) {
    const server = Bun.serve({
      ...options,
      fetch: (request) => this.fetch(request)
    });
    cb == null ? void 0 : cb();
    return server;
  }
};
var src_default = Siopao;
export {
  Siopao,
  src_default as default
};
